# 5. Images. Build Arguments
# КАК ПРАВИЛЬНО IF ELSE ???
# don't working и в одну строку и так далее
---
ARG CENTOS_IMAGE
FROM ${CENTOS_IMAGE}
ARG JAVA_VERSION=11
RUN source /etc/os-release
RUN \
if [ "$VERSION" == "8" ]; then \
        curl http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/centos-gpg-keys-8-3.el8.noarch.rpm -o /tmp/centos-gpg-keys-8-3.el8.noarch.rpm ; yes | rpm -i /tmp/centos-gpg-keys-8-3.el8.noarch.rpm; \
        dnf -y --disablerepo '*' --enablerepo=extras swap centos-linux-repos centos-stream-repos; \
        yum update -y; \
fi
RUN yum install java-${JAVA_VERSION}-openjdk
RUN yum clean all
CMD /bin/bash
---
ARG CENTOS_IMAGE
FROM ${CENTOS_IMAGE}
ARG JAVA_VERSION=11
RUN source /etc/os-release && \
    if [ "$CENTOS_IMAGE" == "centos:8" ]; then \
        curl http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/centos-gpg-keys-8-3.el8.noarch.rpm -o /tmp/centos-gpg-keys-8-3.el8.noarch.rpm ; yes | rpm -i /tmp/centos-gpg-keys-8-3.el8.noarch.rpm; \
        dnf -y --disablerepo '*' --enablerepo=extras swap centos-linux-repos centos-stream-repos; \
        yum update -y; \
    fi
RUN yum install java-11-openjdk -y
RUN yum clean all
CMD /bin/bash
---
ARG CENTOS_IMAGE
FROM ${CENTOS_IMAGE}
ARG JAVA_VERSION=11
RUN source /etc/os-release
RUN \
if [ "$CENTOS_IMAGE" = "centos:8" ]; then \
        curl http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/centos-gpg-keys-8-3.el8.noarch.rpm -o /tmp/centos-gpg-keys-8-3.el8.noarch.rpm && \
        yes | rpm -i /tmp/centos-gpg-keys-8-3.el8.noarch.rpm && \
        dnf -y --disablerepo '*' --enablerepo=extras swap centos-linux-repos centos-stream-repos && \
        yum update -y && \
        yum install -y java-${JAVA_VERSION}-openjdk; \
else \
        yum install -y java-${JAVA_VERSION}-openjdk; \
fi
CMD /bin/bash

# а вот это сработало

ARG CENTOS_IMAGE   
FROM ${CENTOS_IMAGE}
ARG JAVA_VERSION=11
RUN curl http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/centos-gpg-keys-8-3.el8.noarch.rpm -o /tmp/centos-gpg-keys-8-3.el8.noarch.rpm && \
    yes | rpm -i /tmp/centos-gpg-keys-8-3.el8.noarch.rpm && \
    dnf -y --disablerepo '*' --enablerepo=extras swap centos-linux-repos centos-stream-repos && \
    yum update -y && \
    yum install -y java-${JAVA_VERSION}-openjdk
CMD /bin/bash

ARG CENTOS_IMAGE
FROM ${CENTOS_IMAGE}
ARG JAVA_VERSION=11
RUN sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* && \
    sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-* && \
    dnf distro-sync -y && \
    dnf install -y java-${JAVA_VERSION}-openjdk && \
CMD /bin/bash

=====================================================================================



=====================================================================================


=====================================================================================

Don’t run it with systemctl
Instead, check how systemd runs tomcat process (find its unit file) and grab it into ENTRYPOINT/CMD
???

FROM ubuntu
RUN apt -y update && \
    apt -y install wget && \
    apt -y install tar && \
    apt -y install default-jdk && \
    apt-get clean
ENV CATALINA_HOME /opt/tomcat
ENV TOMCAT_MAJOR 9
ENV TOMCAT_VERSION 9.0.85
RUN wget https://dlcdn.apache.org/tomcat/tomcat-${TOMCAT_MAJOR}/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz && \
    tar -xvf apache-tomcat-${TOMCAT_VERSION}.tar.gz && \
    rm apache-tomcat*.tar.gz && \
    mv apache-tomcat* ${CATALINA_HOME}
RUN chmod +x ${CATALINA_HOME}/bin/*sh
EXPOSE 8080
CMD ["opt/tomcat/bin/catalina.sh", "run"]

==============================================================================
какие образы применять при развертыавнии инфраструктуры, каким принципам следовать

==============================================================================
анонимные волюмы применяются на практике?

volume-4
Run a container:
container should run in detach mode;
container should expose 80 container port to 10084 host port;
container should create volume with name c10084_data and the next container destination: /usr/share/nginx/html;
container name: c10084;
used image: nginx.
откуда имя волюма, такого нет в документации

volumes-5
почему таска выполнена только при -it
docker run -itd --name html_data -v /root/index.html:/usr/share/nginx/html/index.html busybox

==================================================================================

version: '2'

volumes:         
  nextcloud:
  db:

services:
  db:
    image: mariadb:10.6
    restart: always
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      - db:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=
      - MYSQL_PASSWORD=
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud

  app:
    image: nextcloud
    restart: always
    ports:
      - 8080:80
    links:
      - db
    volumes:
      - nextcloud:/var/www/html
    environment:
      - MYSQL_PASSWORD=
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=db

==================

практическое назначение Live restore
Daemon data directory
log driver - syslog


